["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$JSON",["^ ","~$stringify",["^ "]]],"~:use-macros",["^ ","~$join","~$clojure.string","~$go","~$cljs.core.async.macros","~$dbg","~$gadjett.core","~$lower-case","^7","~$split","^7"],"~:excludes",["~#set",[]],"~:name","~$klipse-clj.lang.clojure.io","~:imports",null,"~:requires",["^ ","~$cljs","~$cljs.js","^E","^E","~$cljs-http.client","^F","~$cljs-http.util","^G","~$cljs.core.async","^H","~$klipse-clj.repl","^I","~$s","^7","~$j","~$applied-science.js-interop","^J","^J","^7","^7","~$http","^F"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$<!","^H","~$transit-decode","^G","^6","^7","~$def-a-var","^I","^<","^7","^=","^7"],"~:defs",["^ ","~$bundled-ns-ignore-regexp",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","~:line",206,"~:column",7,"~:end-line",206,"~:end-column",31,"~:arglists",["~#list",["~$quote",["^[",[[]]]]]],"^@","~$klipse-clj.lang.clojure.io/bundled-ns-ignore-regexp","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",31,"~:method-params",["^[",[[]]],"~:protocol-impl",null,"~:arglists-meta",["^[",[null,null]],"^W",1,"~:variadic?",false,"^V",206,"~:ret-tag","~$any","^X",206,"~:max-fixed-arity",0,"~:fn-var",true,"^Z",["^[",["^10",["^[",[[]]]]]],"~$skip-ns-macros",["^ ","^@","~$klipse-clj.lang.clojure.io/skip-ns-macros","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",62,"^W",1,"^X",62,"^Y",20,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",62,"^W",6,"^X",62,"^Y",20],"~:tag","~$cljs.core/ISet"],"~$name->cached-resource",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",123,"^W",7,"^X",123,"^Y",28,"^Z",["^[",["^10",["^[",[["~$name"]]]]]],"^@","~$klipse-clj.lang.clojure.io/name->cached-resource","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",28,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",123,"^16","~$string","^X",123,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"~$the-ns-map",["^ ","^@","~$klipse-clj.lang.clojure.io/the-ns-map","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",70,"^W",1,"^X",70,"^Y",16,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",70,"^W",6,"^X",70,"^Y",16],"^1<","~$cljs.core/IMap"],"~$macro-suffixes",["^ ","^@","~$klipse-clj.lang.clojure.io/macro-suffixes","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",23,"^W",1,"^X",23,"^Y",20,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",23,"^W",6,"^X",23,"^Y",20],"^1<","~$cljs.core/IVector"],"~$bundled-ns-root",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",196,"^W",7,"^X",196,"^Y",22,"^Z",["^[",["^10",["^[",[[]]]]]],"^@","~$klipse-clj.lang.clojure.io/bundled-ns-root","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",22,"^12",["^[",[[]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",196,"^16","^17","^X",196,"^18",0,"^19",true,"^Z",["^[",["^10",["^[",[[]]]]]],"~$*verbose?*",["^ ","^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",14,"^W",16,"^X",14,"^Y",26,"~:dynamic",true],"^@","~$klipse-clj.lang.clojure.io/*verbose?*","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",26,"^W",1,"^1K",true,"^V",14,"^X",14,"^1<","^17"],"~$*klipse-settings*",["^ ","^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",13,"^W",16,"^X",13,"^Y",33,"^1K",true],"^@","~$klipse-clj.lang.clojure.io/*klipse-settings*","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",33,"^W",1,"^1K",true,"^V",13,"^X",13,"^1<","^17"],"~$cached-macro-ns-regexp",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",154,"^W",7,"^X",154,"^Y",29,"^Z",["^[",["^10",["^[",[[]]]]]],"^@","~$klipse-clj.lang.clojure.io/cached-macro-ns-regexp","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",29,"^12",["^[",[[]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",154,"^16","^17","^X",154,"^18",0,"^19",true,"^Z",["^[",["^10",["^[",[[]]]]]],"~$cljsjs?",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",226,"^W",7,"^X",226,"^Y",14,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"^@","~$klipse-clj.lang.clojure.io/cljsjs?","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",14,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",226,"^16",["^?",["~$clj","^1G","^17","~$cljs.core/MetaFn","~$clj-nil"]],"^X",226,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"~$bundled-cljsjs-ns?",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",235,"^W",7,"^X",235,"^Y",25,"^Z",["^[",["^10",["^[",[["^1?"]]]]],"~:doc","some cljsjs packages are already loaded e.g react in klipse app"],"^@","~$klipse-clj.lang.clojure.io/bundled-cljsjs-ns?","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",25,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",235,"^16",["^?",["~$boolean","^17","^1U"]],"^X",235,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]],"^1W","some cljsjs packages are already loaded e.g react in klipse app"],"~$skip-ns-cljs",["^ ","^@","~$klipse-clj.lang.clojure.io/skip-ns-cljs","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",74,"^W",1,"^X",74,"^Y",18,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",74,"^W",6,"^X",74,"^Y",18],"^1<","^1="],"~$cljsjs-libname",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",229,"^W",7,"^X",229,"^Y",21,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"^@","~$klipse-clj.lang.clojure.io/cljsjs-libname","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",21,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",229,"^16","^1A","^X",229,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"~$another-goog-path",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",314,"^W",7,"^X",314,"^Y",24,"^Z",["^[",["^10",["^[",[["~$path"]]]]]],"^@","~$klipse-clj.lang.clojure.io/another-goog-path","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",24,"^12",["^[",[["^23"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",314,"^16","^1A","^X",314,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^23"]]]]]],"~$buggy-bundled-ns-ignore?",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",213,"^W",7,"^X",213,"^Y",31,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"^@","~$klipse-clj.lang.clojure.io/buggy-bundled-ns-ignore?","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",31,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",213,"^16",["^?",["^1S","^1G","^17","^1T","^1U"]],"^X",213,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"~$external-libs-files",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",114,"^W",7,"^X",114,"^Y",26,"^Z",["^[",["^10",["^[",[["~$external-libs","~$suffixes","^23"]]]]],"^1W","returns a list of files provided list of external-libs and suffixes"],"^@","~$klipse-clj.lang.clojure.io/external-libs-files","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",26,"^12",["^[",[["^28","^29","^23"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",114,"^16","~$cljs.core/LazySeq","^X",114,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^28","^29","^23"]]]]],"^1W","returns a list of files provided list of external-libs and suffixes"],"~$cached-ns-regexp",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",160,"^W",7,"^X",160,"^Y",23,"^Z",["^[",["^10",["^[",[[]]]]]],"^@","~$klipse-clj.lang.clojure.io/cached-ns-regexp","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",23,"^12",["^[",[[]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",160,"^16","^17","^X",160,"^18",0,"^19",true,"^Z",["^[",["^10",["^[",[[]]]]]],"~$cljs-suffixes",["^ ","^@","~$klipse-clj.lang.clojure.io/cljs-suffixes","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",24,"^W",1,"^X",24,"^Y",19,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",24,"^W",6,"^X",24,"^Y",19],"^1<","^1G"],"~$cached-cljs-ns?",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",164,"^W",7,"^X",164,"^Y",22,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"^@","~$klipse-clj.lang.clojure.io/cached-cljs-ns?","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",22,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",164,"^16",["^?",["^1S","^1G","^17","^1T","^1U"]],"^X",164,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"~$bundled-ns?",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",218,"^W",7,"^X",218,"^Y",18,"^Z",["^[",["^10",["^[",[["^1?"]]]]],"^1W","Checks whether a namespace is present at run-time"],"^@","~$klipse-clj.lang.clojure.io/bundled-ns?","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",18,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",218,"^16","^1Y","^X",218,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]],"^1W","Checks whether a namespace is present at run-time"],"~$load-ns",["^ ","^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",26,"^W",11,"^X",26,"^Y",18,"^1W","\n  Each runtime environment provides a different way to load a library.\n  Received two arguments - a map and a callback function:\n  The map will have the following keys:\n\n    :name   - the name of the library (a symbol)\n    :macros - modifier signaling a macros namespace load\n    :path   - munged relative library path (a string)\n\n    It is up to the implementor to correctly resolve the corresponding .cljs,\n    .cljc, or .js resource (the order must be respected).\n    If :macros is true, resolution should only consider .clj or .cljc resources (the order must be respected).\n  Upon resolution the callback should be invoked with a map containing the following keys:\n\n    :lang       - the language, :clj or :js\n    :source     - the source of the library (a string)\n    :file       - optional, the file path, it will be added to AST's :file keyword (but not in :meta)\n    :cache      - optional, if a :clj namespace has been precompiled to :js, can give an analysis cache for faster loads.\n    :source-map - optional, if a :clj namespace has been precompiled to :js, can give a V3 source map JSON\n\n    If the resource could not be resolved, the callback should be invoked with\n    nil."],"^@","~$klipse-clj.lang.clojure.io/load-ns","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",18,"^W",1,"^V",26,"^X",26,"^1<","~$cljs.core/MultiFn","^1W","\n  Each runtime environment provides a different way to load a library.\n  Received two arguments - a map and a callback function:\n  The map will have the following keys:\n\n    :name   - the name of the library (a symbol)\n    :macros - modifier signaling a macros namespace load\n    :path   - munged relative library path (a string)\n\n    It is up to the implementor to correctly resolve the corresponding .cljs,\n    .cljc, or .js resource (the order must be respected).\n    If :macros is true, resolution should only consider .clj or .cljc resources (the order must be respected).\n  Upon resolution the callback should be invoked with a map containing the following keys:\n\n    :lang       - the language, :clj or :js\n    :source     - the source of the library (a string)\n    :file       - optional, the file path, it will be added to AST's :file keyword (but not in :meta)\n    :cache      - optional, if a :clj namespace has been precompiled to :js, can give an analysis cache for faster loads.\n    :source-map - optional, if a :clj namespace has been precompiled to :js, can give a V3 source map JSON\n\n    If the resource could not be resolved, the callback should be invoked with\n    nil."],"~$load-ns-from-file",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",145,"^W",7,"^X",145,"^Y",24,"^Z",["^[",["^10",["^[",[["~$st","~$ns-sym","~$filename"]]]]]],"^@","~$klipse-clj.lang.clojure.io/load-ns-from-file","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",24,"^12",["^[",[["^2H","^2I","^2J"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",145,"^16","^17","^X",145,"^18",3,"^19",true,"^Z",["^[",["^10",["^[",[["^2H","^2I","^2J"]]]]]],"~$fix-goog-path",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",295,"^W",7,"^X",295,"^Y",20,"^Z",["^[",["^10",["^[",[["^23"]]]]]],"^@","~$klipse-clj.lang.clojure.io/fix-goog-path","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",20,"^12",["^[",[["^23"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",295,"^16","^1A","^X",295,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^23"]]]]]],"~$cached-ns-root",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",127,"^W",7,"^X",127,"^Y",21,"^Z",["^[",["^10",["^[",[[]]]]]],"^@","~$klipse-clj.lang.clojure.io/cached-ns-root","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",21,"^12",["^[",[[]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",127,"^16","^17","^X",127,"^18",0,"^19",true,"^Z",["^[",["^10",["^[",[[]]]]]],"~$filename-of",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",81,"^W",7,"^X",81,"^Y",18,"^Z",["^[",["^10",["^[",[["~$s"]]]]]],"^@","~$klipse-clj.lang.clojure.io/filename-of","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",18,"^12",["^[",[["~$s"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",81,"^16",["^?",[null,"^1A"]],"^X",81,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["~$s"]]]]]],"~$*cache-buster?*",["^ ","^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",15,"^W",16,"^X",15,"^Y",31,"^1K",true],"^@","~$klipse-clj.lang.clojure.io/*cache-buster?*","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",31,"^W",1,"^1K",true,"^V",15,"^X",15,"^1<","^17"],"~$custom-bundled-ns-ignore?",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",209,"^W",7,"^X",209,"^Y",32,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"^@","~$klipse-clj.lang.clojure.io/custom-bundled-ns-ignore?","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",32,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",209,"^16",["^?",["^1S","^1G","^17","^1T","^1U"]],"^X",209,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"~$try-to-load-ns",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",86,"^W",7,"^X",86,"^Y",21,"^Z",["^[",["^10",["^[",[["~$filenames","~$lang","~$src-key","~$src-cb","~$&",["^ ","~:keys",["~$transform","~$can-recover?"],"~:or",["^ ","^30","~$identity","^31",false]]]]]]],"^1W","Tries to load one namespace from filenames.\n  Will call the src-cb upon first success.\n  If can-recover? is false, will call src-cb with nil if it cannot load any namespace.\n  Returns :success if a nampespace was loaded otherwise, returns nil.\n  ","~:top-fn",["^ ","^15",true,"~:fixed-arity",4,"^18",4,"^12",[["^[",["^2W","^2X","^2Y","^2Z",["^ ","^2[",["^30","^31"],"^32",["^ ","^30","^33","^31",false]]]]],"^Z",["^[",[["^2W","^2X","^2Y","^2Z","~$&",["^ ","^2[",["^30","^31"],"^32",["^ ","^30","^33","^31",false]]]]],"^14",["^[",[null]]]],"^@","~$klipse-clj.lang.clojure.io/try-to-load-ns","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",21,"^34",["^ ","^15",true,"^35",4,"^18",4,"^12",[["^[",["^2W","^2X","^2Y","^2Z",["^ ","^2[",["^30","^31"],"^32",["^ ","^30","^33","^31",false]]]]],"^Z",["^[",[["^2W","^2X","^2Y","^2Z","~$&",["^ ","^2[",["^30","^31"],"^32",["^ ","^30","^33","^31",false]]]]],"^14",["^[",[null]]],"^12",[["^[",["^2W","^2X","^2Y","^2Z",["^ ","^2[",["^30","^31"],"^32",["^ ","^30","^33","^31",false]]]]],"^13",null,"^35",4,"^14",["^[",[null]],"^W",1,"^15",true,"~:methods",[["^ ","^35",4,"^15",true,"^1<","^17"]],"^V",86,"^16","^17","^X",86,"^18",4,"^19",true,"^Z",["^[",[["^2W","^2X","^2Y","^2Z","~$&",["^ ","^2[",["^30","^31"],"^32",["^ ","^30","^33","^31",false]]]]],"^1W","Tries to load one namespace from filenames.\n  Will call the src-cb upon first success.\n  If can-recover? is false, will call src-cb with nil if it cannot load any namespace.\n  Returns :success if a nampespace was loaded otherwise, returns nil.\n  "],"~$try-to-load-cljsjs-ns",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",243,"^W",7,"^X",243,"^Y",28,"^Z",["^[",["^10",["^[",[["^1?","^2Z"]]]]],"^1W","Try to load the js file corresponding to a cljsjs package.\n  For that, we have to convert the package name into a full path - hosted on this git repo: https://github.com/viebel/cljsjs-hosted\n  "],"^@","~$klipse-clj.lang.clojure.io/try-to-load-cljsjs-ns","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",28,"^12",["^[",[["^1?","^2Z"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",243,"^16","^17","^X",243,"^18",2,"^19",true,"^Z",["^[",["^10",["^[",[["^1?","^2Z"]]]]],"^1W","Try to load the js file corresponding to a cljsjs package.\n  For that, we have to convert the package name into a full path - hosted on this git repo: https://github.com/viebel/cljsjs-hosted\n  "],"~$load-ns-from-cache",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",130,"^W",7,"^X",130,"^Y",25,"^Z",["^[",["^10",["^[",[["^1?","^2Z","~$macro?","~$on-failure-cb"]]]]]],"^@","~$klipse-clj.lang.clojure.io/load-ns-from-cache","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",25,"^12",["^[",[["^1?","^2Z","^3;","^3<"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",130,"^16","^17","^X",130,"^18",4,"^19",true,"^Z",["^[",["^10",["^[",[["^1?","^2Z","^3;","^3<"]]]]]],"~$edn",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",17,"^W",7,"^X",17,"^Y",10,"^Z",["^[",["^10",["^[",[["~$json"]]]]]],"^@","~$klipse-clj.lang.clojure.io/edn","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",10,"^12",["^[",[["^3?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",17,"^16","^17","^X",17,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^3?"]]]]]],"~$simple-goog-path",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",307,"^W",7,"^X",307,"^Y",23,"^Z",["^[",["^10",["^[",[["^23"]]]]]],"^@","~$klipse-clj.lang.clojure.io/simple-goog-path","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",23,"^12",["^[",[["^23"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",307,"^16","^1A","^X",307,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^23"]]]]]],"~$cached-macro-ns?",["^ ","^S",null,"^T",["^ ","^U","/home/runner/work/juliaworld/juliaworld/target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^V",157,"^W",7,"^X",157,"^Y",23,"^Z",["^[",["^10",["^[",[["^1?"]]]]]],"^@","~$klipse-clj.lang.clojure.io/cached-macro-ns?","^U","target/public/cljs-out/dev/klipse_clj/lang/clojure/io.cljs","^Y",23,"^12",["^[",[["^1?"]]],"^13",null,"^14",["^[",[null,null]],"^W",1,"^15",false,"^V",157,"^16",["^?",["^1S","^1G","^17","^1T","^1U"]],"^X",157,"^18",1,"^19",true,"^Z",["^[",["^10",["^[",[["^1?"]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^;","^;","^9","^9","^D","^E","^E","^E","^I","^I","^H","^H","~$j","^J","^J","^J"],"~:cljs.analyzer/constants",["^ ","~:seen",["^?",["~$cljs.env.macros","~:path","~:js","~:clojure_bundled_ns_ignore_regexp","~:goog","~:transform","~$cljs.analyzer.macros","~:else","~$eval","~:macros","~$cljs.spec.test.alpha$macros","~:default","~:bundled_ns_root","^@","^E","~$cljs.core","^U","~:try-cache?","^33","~$cljs.test","~:recur","~$cljsjs.react","~$cljs.env","~:source","~$cljs.compiler.macros","~$cljsjs.react.dom.server","~:lang","~$cljsjs.react.dom","~$cljs.pprint","~:cached_ns_root","~:with-credentials?","~:cache","~:success","~:status","~:macro","~:can-recover?","~:clojure_cached_macro_ns_regexp","~:gist","~$cljs.source-map","~$cljs.repl","~:json","~:clojure_cached_ns_regexp","~$cljs.spec.test.alpha","~:hierarchy","~:body","~:clj","~:cljs","~$clojure.template"]],"~:order",["^4A","^4D","^@","^3R","^3J","^4;","^3M","^4>","^3P","^4G","^3T","^3O","^3I","^45","^4@","^41","^3V","^E","^3X","^4H","^4?","^3[","^3N","^4<","^4:","^4E","^3Y","^47","^43","^U","^49","^46","^48","^40","^3K","^4=","^4B","^3W","^4C","^3S","^3Q","^33","^4F","^3U","^3L","^3Z","^42","^44"]],"^1W",null,"~:as-aliases",["^ "]]